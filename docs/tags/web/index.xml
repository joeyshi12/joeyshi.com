<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on Joey Shi</title>
    <link>https://joeyshi.xyz/tags/web/</link>
    <description>Recent content in Web on Joey Shi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 02 Jul 2023 10:49:38 -0700</lastBuildDate><atom:link href="https://joeyshi.xyz/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ComputerMag</title>
      <link>https://joeyshi.xyz/projects/computer_mag/</link>
      <pubDate>Sun, 02 Jul 2023 10:49:38 -0700</pubDate>
      
      <guid>https://joeyshi.xyz/projects/computer_mag/</guid>
      <description>Wiki for laptops and desktops with technical details and reviews. This was a group project done for a UBC computer science course: CPSC 304.
Website ER Diagram This is a fullstack web application made with Java, MySQL, and vanilla HTML/CSS/JavaScript.</description>
    </item>
    
    <item>
      <title>Cool Wiki</title>
      <link>https://joeyshi.xyz/projects/cool_wiki/</link>
      <pubDate>Sun, 02 Jul 2023 10:49:38 -0700</pubDate>
      
      <guid>https://joeyshi.xyz/projects/cool_wiki/</guid>
      <description>In my final year at UBC, I decided to typeset notes for some of my courses.
Website Source code To make some of these notes publicly available, I used the following workflow to convert a collection of markdown notes into HTML pages using Pandoc.
Organization 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 .</description>
    </item>
    
    <item>
      <title>Platform Party</title>
      <link>https://joeyshi.xyz/projects/platform_party/</link>
      <pubDate>Sun, 02 Jul 2023 10:49:38 -0700</pubDate>
      
      <guid>https://joeyshi.xyz/projects/platform_party/</guid>
      <description>Real-time multiplayer browser platformer made with p5.
Website Source code This was primarily made using TypeScript and various browser APIs.
Image processing The first API I leveraged was the canvas scripting API, which offered useful image processing functions. To start using this feature, I added a canvas element in my main HTML template file
1 &amp;lt;canvas id=&amp;#34;game&amp;#34;&amp;gt;&amp;lt;/canvas&amp;gt; Then, I get the CanvasRenderingContext2D interface from this element in a separate script.</description>
    </item>
    
  </channel>
</rss>
